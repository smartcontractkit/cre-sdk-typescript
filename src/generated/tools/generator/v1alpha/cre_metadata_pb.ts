// @generated by protoc-gen-es v2.6.3 with parameter "target=ts,import_extension=none,json_types=true,keep_empty_files=false"
// @generated from file tools/generator/v1alpha/cre_metadata.proto (package tools.generator.v1alpha, syntax proto3)
/* eslint-disable */

import type { GenExtension, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { extDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { MethodOptions, ServiceOptions } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_descriptor } from "@bufbuild/protobuf/wkt";
import type { Mode, ModeJson } from "../../../sdk/v1alpha/sdk_pb";
import { file_sdk_v1alpha_sdk } from "../../../sdk/v1alpha/sdk_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file tools/generator/v1alpha/cre_metadata.proto.
 */
export const file_tools_generator_v1alpha_cre_metadata: GenFile = /*@__PURE__*/
  fileDesc("Cip0b29scy9nZW5lcmF0b3IvdjFhbHBoYS9jcmVfbWV0YWRhdGEucHJvdG8SF3Rvb2xzLmdlbmVyYXRvci52MWFscGhhIoQBCgtTdHJpbmdMYWJlbBJECghkZWZhdWx0cxgBIAMoCzIyLnRvb2xzLmdlbmVyYXRvci52MWFscGhhLlN0cmluZ0xhYmVsLkRlZmF1bHRzRW50cnkaLwoNRGVmYXVsdHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIogBCgtVaW50NjRMYWJlbBJECghkZWZhdWx0cxgBIAMoCzIyLnRvb2xzLmdlbmVyYXRvci52MWFscGhhLlVpbnQ2NExhYmVsLkRlZmF1bHRzRW50cnkaMwoNRGVmYXVsdHNFbnRyeRILCgNrZXkYASABKAkSEQoFdmFsdWUYAiABKARCAjAAOgI4ASKEAQoLVWludDMyTGFiZWwSRAoIZGVmYXVsdHMYASADKAsyMi50b29scy5nZW5lcmF0b3IudjFhbHBoYS5VaW50MzJMYWJlbC5EZWZhdWx0c0VudHJ5Gi8KDURlZmF1bHRzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgNOgI4ASKGAQoKSW50NjRMYWJlbBJDCghkZWZhdWx0cxgBIAMoCzIxLnRvb2xzLmdlbmVyYXRvci52MWFscGhhLkludDY0TGFiZWwuRGVmYXVsdHNFbnRyeRozCg1EZWZhdWx0c0VudHJ5EgsKA2tleRgBIAEoCRIRCgV2YWx1ZRgCIAEoA0ICMAA6AjgBIoIBCgpJbnQzMkxhYmVsEkMKCGRlZmF1bHRzGAEgAygLMjEudG9vbHMuZ2VuZXJhdG9yLnYxYWxwaGEuSW50MzJMYWJlbC5EZWZhdWx0c0VudHJ5Gi8KDURlZmF1bHRzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgFOgI4ASLBAgoFTGFiZWwSPAoMc3RyaW5nX2xhYmVsGAEgASgLMiQudG9vbHMuZ2VuZXJhdG9yLnYxYWxwaGEuU3RyaW5nTGFiZWxIABI8Cgx1aW50NjRfbGFiZWwYAiABKAsyJC50b29scy5nZW5lcmF0b3IudjFhbHBoYS5VaW50NjRMYWJlbEgAEjoKC2ludDY0X2xhYmVsGAMgASgLMiMudG9vbHMuZ2VuZXJhdG9yLnYxYWxwaGEuSW50NjRMYWJlbEgAEjwKDHVpbnQzMl9sYWJlbBgEIAEoCzIkLnRvb2xzLmdlbmVyYXRvci52MWFscGhhLlVpbnQzMkxhYmVsSAASOgoLaW50MzJfbGFiZWwYBSABKAsyIy50b29scy5nZW5lcmF0b3IudjFhbHBoYS5JbnQzMkxhYmVsSABCBgoEa2luZCLkAQoSQ2FwYWJpbGl0eU1ldGFkYXRhEh8KBG1vZGUYASABKA4yES5zZGsudjFhbHBoYS5Nb2RlEhUKDWNhcGFiaWxpdHlfaWQYAiABKAkSRwoGbGFiZWxzGAMgAygLMjcudG9vbHMuZ2VuZXJhdG9yLnYxYWxwaGEuQ2FwYWJpbGl0eU1ldGFkYXRhLkxhYmVsc0VudHJ5Gk0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRItCgV2YWx1ZRgCIAEoCzIeLnRvb2xzLmdlbmVyYXRvci52MWFscGhhLkxhYmVsOgI4ASI2ChhDYXBhYmlsaXR5TWV0aG9kTWV0YWRhdGESGgoSbWFwX3RvX3VudHlwZWRfYXBpGAEgASgIOm4KCmNhcGFiaWxpdHkSHy5nb29nbGUucHJvdG9idWYuU2VydmljZU9wdGlvbnMY0IYDIAEoCzIrLnRvb2xzLmdlbmVyYXRvci52MWFscGhhLkNhcGFiaWxpdHlNZXRhZGF0YVIKY2FwYWJpbGl0eTprCgZtZXRob2QSHi5nb29nbGUucHJvdG9idWYuTWV0aG9kT3B0aW9ucxjRhgMgASgLMjEudG9vbHMuZ2VuZXJhdG9yLnYxYWxwaGEuQ2FwYWJpbGl0eU1ldGhvZE1ldGFkYXRhUgZtZXRob2RCrwEKG2NvbS50b29scy5nZW5lcmF0b3IudjFhbHBoYUIQQ3JlTWV0YWRhdGFQcm90b1ABogIDVEdYqgIXVG9vbHMuR2VuZXJhdG9yLlYxYWxwaGHKAhhUb29sc1xHZW5lcmF0b3JfXFYxYWxwaGHiAiRUb29sc1xHZW5lcmF0b3JfXFYxYWxwaGFcR1BCTWV0YWRhdGHqAhlUb29sczo6R2VuZXJhdG9yOjpWMWFscGhhYgZwcm90bzM", [file_google_protobuf_descriptor, file_sdk_v1alpha_sdk]);

/**
 * @generated from message tools.generator.v1alpha.StringLabel
 */
export type StringLabel = Message<"tools.generator.v1alpha.StringLabel"> & {
  /**
   * @generated from field: map<string, string> defaults = 1;
   */
  defaults: { [key: string]: string };
};

/**
 * @generated from message tools.generator.v1alpha.StringLabel
 */
export type StringLabelJson = {
  /**
   * @generated from field: map<string, string> defaults = 1;
   */
  defaults?: { [key: string]: string };
};

/**
 * Describes the message tools.generator.v1alpha.StringLabel.
 * Use `create(StringLabelSchema)` to create a new message.
 */
export const StringLabelSchema: GenMessage<StringLabel, {jsonType: StringLabelJson}> = /*@__PURE__*/
  messageDesc(file_tools_generator_v1alpha_cre_metadata, 0);

/**
 * @generated from message tools.generator.v1alpha.Uint64Label
 */
export type Uint64Label = Message<"tools.generator.v1alpha.Uint64Label"> & {
  /**
   * @generated from field: map<string, uint64> defaults = 1;
   */
  defaults: { [key: string]: bigint };
};

/**
 * @generated from message tools.generator.v1alpha.Uint64Label
 */
export type Uint64LabelJson = {
  /**
   * @generated from field: map<string, uint64> defaults = 1;
   */
  defaults?: { [key: string]: string };
};

/**
 * Describes the message tools.generator.v1alpha.Uint64Label.
 * Use `create(Uint64LabelSchema)` to create a new message.
 */
export const Uint64LabelSchema: GenMessage<Uint64Label, {jsonType: Uint64LabelJson}> = /*@__PURE__*/
  messageDesc(file_tools_generator_v1alpha_cre_metadata, 1);

/**
 * @generated from message tools.generator.v1alpha.Uint32Label
 */
export type Uint32Label = Message<"tools.generator.v1alpha.Uint32Label"> & {
  /**
   * @generated from field: map<string, uint32> defaults = 1;
   */
  defaults: { [key: string]: number };
};

/**
 * @generated from message tools.generator.v1alpha.Uint32Label
 */
export type Uint32LabelJson = {
  /**
   * @generated from field: map<string, uint32> defaults = 1;
   */
  defaults?: { [key: string]: number };
};

/**
 * Describes the message tools.generator.v1alpha.Uint32Label.
 * Use `create(Uint32LabelSchema)` to create a new message.
 */
export const Uint32LabelSchema: GenMessage<Uint32Label, {jsonType: Uint32LabelJson}> = /*@__PURE__*/
  messageDesc(file_tools_generator_v1alpha_cre_metadata, 2);

/**
 * @generated from message tools.generator.v1alpha.Int64Label
 */
export type Int64Label = Message<"tools.generator.v1alpha.Int64Label"> & {
  /**
   * @generated from field: map<string, int64> defaults = 1;
   */
  defaults: { [key: string]: bigint };
};

/**
 * @generated from message tools.generator.v1alpha.Int64Label
 */
export type Int64LabelJson = {
  /**
   * @generated from field: map<string, int64> defaults = 1;
   */
  defaults?: { [key: string]: string };
};

/**
 * Describes the message tools.generator.v1alpha.Int64Label.
 * Use `create(Int64LabelSchema)` to create a new message.
 */
export const Int64LabelSchema: GenMessage<Int64Label, {jsonType: Int64LabelJson}> = /*@__PURE__*/
  messageDesc(file_tools_generator_v1alpha_cre_metadata, 3);

/**
 * @generated from message tools.generator.v1alpha.Int32Label
 */
export type Int32Label = Message<"tools.generator.v1alpha.Int32Label"> & {
  /**
   * @generated from field: map<string, int32> defaults = 1;
   */
  defaults: { [key: string]: number };
};

/**
 * @generated from message tools.generator.v1alpha.Int32Label
 */
export type Int32LabelJson = {
  /**
   * @generated from field: map<string, int32> defaults = 1;
   */
  defaults?: { [key: string]: number };
};

/**
 * Describes the message tools.generator.v1alpha.Int32Label.
 * Use `create(Int32LabelSchema)` to create a new message.
 */
export const Int32LabelSchema: GenMessage<Int32Label, {jsonType: Int32LabelJson}> = /*@__PURE__*/
  messageDesc(file_tools_generator_v1alpha_cre_metadata, 4);

/**
 * @generated from message tools.generator.v1alpha.Label
 */
export type Label = Message<"tools.generator.v1alpha.Label"> & {
  /**
   * @generated from oneof tools.generator.v1alpha.Label.kind
   */
  kind: {
    /**
     * @generated from field: tools.generator.v1alpha.StringLabel string_label = 1;
     */
    value: StringLabel;
    case: "stringLabel";
  } | {
    /**
     * @generated from field: tools.generator.v1alpha.Uint64Label uint64_label = 2;
     */
    value: Uint64Label;
    case: "uint64Label";
  } | {
    /**
     * @generated from field: tools.generator.v1alpha.Int64Label int64_label = 3;
     */
    value: Int64Label;
    case: "int64Label";
  } | {
    /**
     * @generated from field: tools.generator.v1alpha.Uint32Label uint32_label = 4;
     */
    value: Uint32Label;
    case: "uint32Label";
  } | {
    /**
     * @generated from field: tools.generator.v1alpha.Int32Label int32_label = 5;
     */
    value: Int32Label;
    case: "int32Label";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message tools.generator.v1alpha.Label
 */
export type LabelJson = {
  /**
   * @generated from field: tools.generator.v1alpha.StringLabel string_label = 1;
   */
  stringLabel?: StringLabelJson;

  /**
   * @generated from field: tools.generator.v1alpha.Uint64Label uint64_label = 2;
   */
  uint64Label?: Uint64LabelJson;

  /**
   * @generated from field: tools.generator.v1alpha.Int64Label int64_label = 3;
   */
  int64Label?: Int64LabelJson;

  /**
   * @generated from field: tools.generator.v1alpha.Uint32Label uint32_label = 4;
   */
  uint32Label?: Uint32LabelJson;

  /**
   * @generated from field: tools.generator.v1alpha.Int32Label int32_label = 5;
   */
  int32Label?: Int32LabelJson;
};

/**
 * Describes the message tools.generator.v1alpha.Label.
 * Use `create(LabelSchema)` to create a new message.
 */
export const LabelSchema: GenMessage<Label, {jsonType: LabelJson}> = /*@__PURE__*/
  messageDesc(file_tools_generator_v1alpha_cre_metadata, 5);

/**
 * @generated from message tools.generator.v1alpha.CapabilityMetadata
 */
export type CapabilityMetadata = Message<"tools.generator.v1alpha.CapabilityMetadata"> & {
  /**
   * @generated from field: sdk.v1alpha.Mode mode = 1;
   */
  mode: Mode;

  /**
   * @generated from field: string capability_id = 2;
   */
  capabilityId: string;

  /**
   * @generated from field: map<string, tools.generator.v1alpha.Label> labels = 3;
   */
  labels: { [key: string]: Label };
};

/**
 * @generated from message tools.generator.v1alpha.CapabilityMetadata
 */
export type CapabilityMetadataJson = {
  /**
   * @generated from field: sdk.v1alpha.Mode mode = 1;
   */
  mode?: ModeJson;

  /**
   * @generated from field: string capability_id = 2;
   */
  capabilityId?: string;

  /**
   * @generated from field: map<string, tools.generator.v1alpha.Label> labels = 3;
   */
  labels?: { [key: string]: LabelJson };
};

/**
 * Describes the message tools.generator.v1alpha.CapabilityMetadata.
 * Use `create(CapabilityMetadataSchema)` to create a new message.
 */
export const CapabilityMetadataSchema: GenMessage<CapabilityMetadata, {jsonType: CapabilityMetadataJson}> = /*@__PURE__*/
  messageDesc(file_tools_generator_v1alpha_cre_metadata, 6);

/**
 * @generated from message tools.generator.v1alpha.CapabilityMethodMetadata
 */
export type CapabilityMethodMetadata = Message<"tools.generator.v1alpha.CapabilityMethodMetadata"> & {
  /**
   * @generated from field: bool map_to_untyped_api = 1;
   */
  mapToUntypedApi: boolean;
};

/**
 * @generated from message tools.generator.v1alpha.CapabilityMethodMetadata
 */
export type CapabilityMethodMetadataJson = {
  /**
   * @generated from field: bool map_to_untyped_api = 1;
   */
  mapToUntypedApi?: boolean;
};

/**
 * Describes the message tools.generator.v1alpha.CapabilityMethodMetadata.
 * Use `create(CapabilityMethodMetadataSchema)` to create a new message.
 */
export const CapabilityMethodMetadataSchema: GenMessage<CapabilityMethodMetadata, {jsonType: CapabilityMethodMetadataJson}> = /*@__PURE__*/
  messageDesc(file_tools_generator_v1alpha_cre_metadata, 7);

/**
 * 50000-99999 is the range for custom options.
 *
 * @generated from extension: tools.generator.v1alpha.CapabilityMetadata capability = 50000;
 */
export const capability: GenExtension<ServiceOptions, CapabilityMetadata> = /*@__PURE__*/
  extDesc(file_tools_generator_v1alpha_cre_metadata, 0);

/**
 * 50000-99999 is the range for custom options.
 *
 * @generated from extension: tools.generator.v1alpha.CapabilityMethodMetadata method = 50001;
 */
export const method: GenExtension<MethodOptions, CapabilityMethodMetadata> = /*@__PURE__*/
  extDesc(file_tools_generator_v1alpha_cre_metadata, 1);

