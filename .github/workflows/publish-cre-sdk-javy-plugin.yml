name: Publish CRE SDK Javy Plugin

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Git tag to checkout and publish from (leave empty for latest commit on main)"
        required: false
        type: string
      dry_run:
        description: "Run in dry-run mode (do not actually publish)"
        required: false
        default: false
        type: boolean

env:
  BUN_VERSION: "1.2.21"

jobs:
  build-and-publish-cre-sdk-javy-plugin:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # for npm provenance
    environment: Publish

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag || 'main' }}
          fetch-depth: 0
          submodules: recursive

      - name: Display checkout info
        run: |
          echo "Checked out ref: ${{ github.event.inputs.tag || 'main' }}"
          echo "Current commit: $(git rev-parse HEAD)"
          echo "Current commit short: $(git rev-parse --short HEAD)"

      - name: Setup Bun
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2.0.2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Get package version
        working-directory: packages/cre-sdk-javy-plugin
        run: |
          # Get the version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "JAVY_PLUGIN_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          echo "Using javy plugin version from package.json: $CURRENT_VERSION"

      - name: Verify npm authentication
        env:
          NPM_CONFIG_TOKEN: ${{ secrets. NPM_CRE_SDK_TYPESCRIPT }}
        run: bun pm whoami

      - name: Publish CRE SDK Javy plugin package
        working-directory: packages/cre-sdk-javy-plugin
        env:
          NPM_CONFIG_TOKEN: ${{ secrets. NPM_CRE_SDK_TYPESCRIPT }}
        run: |
          echo "Publishing @chainlink/cre-sdk-javy-plugin..."
          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            echo "DRY RUN: Would publish @chainlink/cre-sdk-javy-plugin"
            bun publish --dry-run --access public --verbose
          else
            bun publish --access public --verbose
          fi

      - name: Create release summary
        if: ${{ !github.event.inputs.dry_run }}
        run: |
          echo "## üîå Published CRE SDK Javy Plugin Package" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- üîå \`@chainlink/cre-sdk-javy-plugin\`" >> $GITHUB_STEP_SUMMARY
          echo "- üìã Published from: \`${{ github.event.inputs.tag || 'main' }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- üîó Commit: \`$(git rev-parse --short HEAD)\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Installation" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Using bun" >> $GITHUB_STEP_SUMMARY
          echo "bun add @chainlink/cre-sdk-javy-plugin" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### CLI Commands" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "# Setup CRE environment" >> $GITHUB_STEP_SUMMARY
          echo "bunx cre-setup" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Compile workflow" >> $GITHUB_STEP_SUMMARY
          echo "bunx cre-compile-workflow" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  verify-cre-sdk-javy-plugin:
    needs: build-and-publish-cre-sdk-javy-plugin
    runs-on: ubuntu-latest
    if: ${{ !github.event.inputs.dry_run }}

    steps:
      - name: Setup Bun
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2.0.2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Wait for package propagation
        run: sleep 60

      - name: Verify CRE SDK Javy plugin package installation
        run: |
          echo "Verifying @chainlink/cre-sdk-javy-plugin can be installed..."
          bun add @chainlink/cre-sdk-javy-plugin --dry-run
          echo "‚úÖ CRE SDK Javy plugin package verification successful"

      - name: Verify CLI binaries are available
        run: |
          echo "Installing package to test CLI binaries..."
          bun add @chainlink/cre-sdk-javy-plugin

          echo "Checking cre-setup command via bunx..."
          if bunx cre-setup --help >/dev/null 2>&1; then
            echo "‚úÖ cre-setup command is available via bunx"
          else
            echo "‚ùå cre-setup command not found via bunx"
            exit 1
          fi

          echo "Checking cre-compile-workflow command via bunx..."
          if bunx cre-compile-workflow --help >/dev/null 2>&1; then
            echo "‚úÖ cre-compile-workflow command is available via bunx"
          else
            echo "‚ùå cre-compile-workflow command not found via bunx"
            exit 1
          fi
